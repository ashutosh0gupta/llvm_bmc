# LITMUS TESTS

## Original Litmus Tests
- original contains all litmus tests for ARM from http://diy.inria.fr/aarch64/
- aarch64.cat is the cat model for herd7
- listfile.txt contains a list of files that can be translated from litmus format to C code.
- aarch64.herd.results.txt is output of herd7 for ARM litmus tests

## C Tests
- c-litmus-ARMCBMC contains C litmus tests for ARM-CBMC (on working). C files use <pthread.h> for concurrency, <assert.h> for assertions, and <stdatomic.h> for atomic accesses.
- c-litmus-CBMC contains C litmus tests for CBMC. C files use <pthread.h> for concurrency, <assert.h> for assertions.
- c-litmus-CSEQ contains C litmus tests for CSEQ. C files use <pthread.h> for concurrency, <assert.h> for assertions.

## Running Scripts
In run-scripts folder run:
- python3 runall-HERD7.py to run all litmus tests for ARM by Herd7. Output file is ../aarch64.herd.results.txt.
- python3 runall-CBMC-PSO.py to run all litmus tests for PSO by CBMC. Output file is ../pso.cbmc.results.txt. We expect to have FALSE POSITVE due to different memory models (ARM vs PSO). However, we do not expect FAILUREs.
- python3 runall-CBMC-SC.py to run all litmus tests for SC by CBMC. Output file is ../sc.cbmc.results.txt. We expect to have FALSE POSITVE due to different memory models (ARM vs SC). However, we do not expect FAILUREs.
- python3 runall-CSEQ.py to run all litmus tests for SC by CSEQ. Output file is ../sc.cseq.results.txt. We expect to have FALSE POSITVE due to different memory models (ARM vs SC). However, we do not expect FAILUREs.
- python3 runall-ARMCBMC.py to run all litmus tests for SC by ARMCBMC. Output file is ../arm.armcbmc.results.txt. FAILUREs should be checked. We do not expect FAILUREs with result Accepted. FAILUREs with result Forbiden might due to the bound of context switching.
